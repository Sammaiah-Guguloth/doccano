ARG NODE_VERSION="18.20-bullseye-slim"
FROM node:${NODE_VERSION} AS frontend-builder

# Set working directory
WORKDIR /app
COPY frontend/ /app/

# hadolint ignore=DL3008
RUN apt-get update \
 && apt-get install -y --no-install-recommends git python3 make g++ ca-certificates \
 && git config --global url."https://github.com/".insteadOf git://github.com/ \
 && corepack enable \
 && corepack prepare yarn@stable --activate \
 && yarn install --network-timeout 1000000 \
 && yarn build \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

# Runtime stage
FROM nginx:1.21.1-alpine AS runtime

# Create non-root user
RUN addgroup -g 61000 doccano \
  && adduser -G doccano -S doccano -u 61000

# Copy build output and nginx configs
COPY --chown=doccano:doccano --from=frontend-builder /app/dist /var/www/html
COPY docker/nginx/nginx.conf.template /etc/nginx/nginx.conf.template
COPY docker/nginx/default.conf /etc/nginx/conf.d/default.conf

# Fix permissions
RUN chown -R doccano:doccano /var/cache/nginx \
  && chmod -R g+w /var/cache/nginx \
  && mkdir -p /media \
  && chown -R doccano:doccano /media \
  && chown -R doccano:doccano /etc/nginx

EXPOSE 8080

USER doccano:doccano
